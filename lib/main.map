{"version":3,"sources":["webpack:///webpack/bootstrap 2a0add596dfb20819965","webpack:///./src/index.ts","webpack:///./src/Logger.ts","webpack:///external \"winston\"","webpack:///external \"winston-syslog\""],"names":[],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,qBAAqB,OAAO;AAC5B;AACA;AACA,iCAAiC,uBAAuB;AACxD,8BAA8B,mBAAmB;AACjD,kCAAkC,mBAAmB;AACrD,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1EA,oC;;;;;;ACAA,2C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2a0add596dfb20819965","\"use strict\";\nexports.__esModule = true;\nvar Logger_1 = require(\"./Logger\");\nexports[\"default\"] = Logger_1[\"default\"];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\nexports.__esModule = true;\nvar winston = require(\"winston\");\nvar syslog = require(\"winston-syslog\");\nvar Logger = /** @class */ (function () {\n    /**\n     *\n     * @param appName application name\n     * @param protocol {string} unix\n     * @param level {string} debug|info|notice|warning|error|crit|alert|emerg;\n     */\n    function Logger(appName, path, protocol, level) {\n        if (appName === void 0) { appName = \"syslogger\"; }\n        if (path === void 0) { path = \"/dev/log\"; }\n        if (protocol === void 0) { protocol = \"unix\"; }\n        if (level === void 0) { level = \"debug\"; }\n        this.transports = [];\n        this.options = {\n            protocol: protocol,\n            path: path,\n            app_name: appName\n        };\n        this.transports.push(new syslog.Syslog(this.options));\n        if (process.env.NODE_ENV === \"development\") {\n            this.transports.push(new winston.transports.Console());\n        }\n        this.loggerOptions = {\n            level: level,\n            levels: winston.config.syslog.levels,\n            transports: this.transports\n        };\n        this.logger = new winston.Logger(this.loggerOptions);\n    }\n    Logger.prototype.format = function (inputObject) {\n        return JSON.stringify(inputObject);\n    };\n    Logger.prototype.setFormat = function (fn) {\n        this.format = fn;\n    };\n    Logger.prototype.log = function (level, message, object) {\n        var formattedMessage = object\n            ? \"\" + this.format(object) + message\n            : message;\n        this.logger.log(level, formattedMessage);\n    };\n    Logger.prototype.emerg = function (message, object) {\n        this.log(\"emerg\", message, object);\n    };\n    Logger.prototype.alert = function (message, object) {\n        this.log(\"alert\", message, object);\n    };\n    Logger.prototype.crit = function (message, object) {\n        this.log(\"crit\", message, object);\n    };\n    Logger.prototype.error = function (message, object) {\n        this.log(\"error\", message, object);\n    };\n    Logger.prototype.warning = function (message, object) {\n        this.log(\"warning\", message, object);\n    };\n    Logger.prototype.notice = function (message, object) {\n        this.log(\"notice\", message, object);\n    };\n    Logger.prototype.info = function (message, object) {\n        this.log(\"info\", message, object);\n    };\n    Logger.prototype.debug = function (message, object) {\n        this.log(\"debug\", message, object);\n    };\n    Logger.prototype.parseObject = function (message, object) {\n        return \"\" + this.format(object) + message;\n    };\n    return Logger;\n}());\nexports[\"default\"] = Logger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Logger.ts\n// module id = 2\n// module chunks = 0","module.exports = require(\"winston\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"winston-syslog\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston-syslog\"\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}